5704
50
Emacs tutorial.  See end for copying conditions.

Emacs commands generally involve the CONTROL key (sometimes labeled
CTRL or CTL) or the META key (sometimes labeled EDIT or ALT).  Rather than
write that in full each time, we'll use the following abbreviations:

 C-<chr>  means hold the CONTROL key while typing the character <chr>
	  Thus, C-f would be: hold the CONTROL key and type f.
 M-<chr>  means hold the META or EDIT or ALT key down while typing <chr>.
	  If there is no META, EDIT or ALT key, instead press and release the
	  ESC key and then type <chr>.  We write <ESC> for the ESC key.

Important note: to end the Emacs session, type C-x C-c.  (Two characters.)
To quit a partially entered command, type C-g.
To stop the tutorial, type C-x k, then <Return> at the prompt.
The characters ">>" at the left margin indicate directions for you to
try using a command.  For instance:





xk
xk
xknues below]
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk keys,
xkition
xk
xk
xk
xk
xk
xk
xkf
xk
xk
xk
xk
xk
xk
xk
xk
xkand for:
xk You
xktime.
xk
xk
xk
xk
xkine.
xk
xkto
xk in
xkire it.)
xk
xk
xkk
xk
xk
xk
xk
xk is.
xk
xk
xk
xkeyond
xk It
xk text
xk
xk
xkn, and
xk
xk
xk-f
xk
xk
xk
xk
xkthe word.
xk of the
xk
xk
xk-b's
xkous
xk
xk
xk-f and
xkr
xkntences,
xkhat are
xk
xk
xk move to
xkginning
xk
xk
xk
xk
xk
xking one
xkne seems
xk
xk
xk  To
xkted in
xk
xk
xkg the
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xkthan),
xk
xk
xk
xk the
xkft key
xk-comma.
xk
xk
xk
xk
xk
xk
xk
xkinal has
xkhree
xk once
xkese Control
xko not
xkrd, once
xkyou can
xkell.
xk
xkds, this
xk count
xknd.  If
xkative way
xkn the
xkks on
xkrgument",
xk.
xk
xk
xk
xkursor
xk
xk
xksome
xk of
xkof a
xk
xk
xk
xkment,
xkn by a
xk
xk
xk
xk
xkd like
xk
xk
xk there
xkide of
xkse in
xk
xk
xkoll.
xk
xk
xk
xk
xk
xkfely by
xk too
xk
xk
xknning of
xk
xk
xk-g.
xkou
xk
xk
xkith a C-g.
xk
xk
xk
xk
xk
xknot use
xk
xk
xksage
xko go
xk
xk
xkar) in
xkte the
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk.  We
xkwe want
xkc
xk
xk
xk
xk
xkwindow
xktes all
xk
xk
xk
xk
xk
xk
xk
xkar.
xk
xk many of
xkgs.
xk
xk
xk
xk
xk
xk
xkacters,
xka
xkard
xk
xk
xk
xk labeled
xkdelete
xk
xk
xk>, but
xk
xk
xk
xk
xk
xk
xk
xkhe line
xksing a
xkpaces on
xkindicate
xknal, the
xkost
xk
xk
xknserting.
xk
xk
xkreen
xk
xk
xker.
xknto
xkn the
xk
xk
xk This
xk
xk
xk
xk
xkhan
xk text,
xkwhen
xkwith
xking a
xklectric".
xk
xk
xk
xk
xk spaces
xk
xk
xk
xkerts
xk
xk
xk
xk
xk
xk
xk
xk
xkor
xkr
xk
xkor
xk
xk
xkine
xk
xk
xkel
xkaracter,
xk M-e,
xk
xk
xkMove to
xkar.)
xkto kill.
xknd the
xklls all
xk
xk
xkraph.
xk
xk
xke
xk
xk
xk
xk
xkd" text
xkcannot
xksee
xknk of it
xky.)
xk text
xkmands
xk spaces,
xkdeletion
xkt, they
xk
xk
xkty.
xk
xkne
xk
xk
xkecond
xkup.  C-k
xkAND
xk two
xk
xk
xk was
xk even in
xkhat
xkand
xk
xk
xk
xktext,
xk
xk
xk
xk
xkved
xk
xk
xk
xk
xk
xk
xk-y
xk
xk
xkd then
xk  But
xkhe M-y
xk typing
xkM-y
xk have
xkything to
xkt where
xk
xk
xkthe most
xk
xk
xk
xk
xke.
xk
xk
xk
xk
xk
xk
xk
xk
xk
xka
xk
xk
xkepeat
xkmmand.
xk
xktext
xkg
xkn groups
xkto type
xk
xk
xkar.
xk
xkas C-/.
xk.
xktle less
xk
xk
xkt.
xk
xktext.
xkcts
xkndo.
xk
xk
xk
xk
xk
xkin a
xker to
xknter the
xk
xk
xkhin
xkself.
xkent
xk
xk when
xkin case
xk
xk
xkthat
xkthing
xk the
xkpersonal
xkyou find
xke spot.
xk
xk you
xks an
xk.  After
xk
xk
xk
xk
xkappears
xkhe
xke
xk
xk
xk,
xk
xk
xk
xk
xk
xk
xko
xkand goes
xk
xk
xkhe
xkthe
xk
xk
xk
xk
xkme you
xk it is
xke
xk the
xk
xk
xk
xkd show
xk
xk
xk also
xkcreate a
xken begin
xkile,
xkserted.
xkdy
xk
xk
xk
xk
xk
xk
xk
xkith
xkEmacs.
xk
xkr".
xk of the
xk
xk
xk
xk
xk
xk
xkme for
xks window
xk
xk
xk
xk
xkt any
xknother
xka buffer
xk again
xknd.
xk
xk
xk
xkrial.
xk
xkme
xks true.
xkr name
xk
xk
xk
xkwith
xkly did
xkion you
xk
xk
xkfile.
xkttom
xk
xk
xksages.
xkrial.
xk
xk file,
xkEmacs,
xkfile's
xk useful,
xkirst
xk to save
xk
xk
xk
xk
xkou have
xk the
xk
xk
xk
xk.
xk
xk
xk
xk
xk
xk
xke put
xks with
xk
xk
xk
xk.
xk
xk than the
xkn a few
xk, for
xk
xking
xke before
xk
xk
xkal
xk this
xkou're
xk time,
xk
xk
xkn go
xkng on a
xke shell
xk, you
xk
xk
xks also
xkit, such
xk
xk
xkave learned:
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk An
xkng with
xkt the
xkthe
xkB>" and
xkfound
xkoard.)
xk
xk
xkto be
xkh
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xk
xkhem yet,
xkrom
xkile that
xkning and
xko save
xkmal way,
xk
xk
xkng by
xkauto
xken it
xkr the
xk
xk
xk
xk
xk
xk
xkly, it
xkd the
xkreen.
xk
xk
xk
xk
xk
xkine".
xk
xk
xk
xk
xknd
xk
xk
xkave
xk; it
xkreen.
xknstead
xkll say
xk fits on
xk
xk
xkhe
xk
xk
xke text.
xkne shows
xk
xk
xku what
xkch is
xk
xk
xkfor
xk mode,
xktive,
xk
xk
xk
xkexample,
xkce each
xkould
xk  Each
xku can
xkommand to
xk
xk
xkis file, you
xk
xk
xk
xk
xkes in
xk
xk,
xk
xk
xkmmands
xkit
xk
xk
xk
xk
xk
xk
xkode.
xk
xk
xks.
xkr
xkf by
xkof your
xk or any
xk
xk
xk
xk Emacs
xksert
xk
xk
xkturn>.
xk
xk turns
xkay that
xk
xk
xkf "asdf "
xkt put in
xkspaces.
xk
xk it
xku want
xk
xk
xk
xk
xk
xk
xk
xkde
xk
xkside
xk
xk
xk
xk
xk
xk
xk
xk
xkntiguous
xkh it.
xke cursor
xk
xk
xke
xk
xk
xkd C-r
xk
xk
xkears as
xkat is
xk that
xk
xk
xkme,
xk
xk
xk
xkr".
xk
xk
xk
xkries to
xkr.  To
xk no such
xkrently
xk
xk
xkL>, the
xkust
xk search
xkce.  If
xkaracter
xk", to
xkthe
xkEL>.
xkes back
xk
xk
xka
xkin a
xk
xk
xkh string
xk
xkhat we
xktion of
xk
xk
xk
xk
xk
xk
xk than
xkses the
xkher
xksary of
xk
xk
xk
xk
xk
xkys in
xk
xk
xk
xk
xk
xkom window.
xk
xk
xk
xk
xk
xk
xkselected
xkminent
xks have
their own cursor positions; if you are running Emacs in a graphical
display, those cursors are drawn as unblinking hollow boxes.

The command C-M-v is very useful when you are editing text in one
window and using the other window just for reference.  Without leaving
the selected window, you can scroll the text in the other window with
C-M-v.

C-M-v is an example of a CONTROL-META character.  If you have a META
(or Alt) key, you can type C-M-v by holding down both CONTROL and META
while typing v.  It does not matter whether CONTROL or META "comes
first," as both of these keys act by modifying the characters you
type.

If you do not have a META key, and you use <ESC> instead, the order
does matter: you must type <ESC> followed by CONTROL-v, because
CONTROL-<ESC> v will not work.  This is because <ESC> is a character
in its own right, not a modifier key.

>> Type C-x 1 (in the top window) to get rid of the bottom window.

(If you had typed C-x 1 in the bottom window, that would get rid
of the top one.  Think of this command as "Keep just one
window--the window I am already in.")

You do not have to display the same buffer in both windows.  If you
use C-x C-f to find a file in one window, the other window does not
change.  You can find a file in each window independently.

Here is another way to use two windows to display two different things:

>> Type C-x 4 C-f followed by the name of one of your files.
   End with <Return>.  See the specified file appear in the bottom
   window.  The cursor goes there, too.

>> Type C-x o to go back to the top window, and C-x 1 to delete
   the bottom window.


* MULTIPLE FRAMES
------------------

Emacs can also create multiple "frames".  A frame is what we call one
collection of windows, together with its menus, scroll bars, echo
area, etc.  On graphical displays, what Emacs calls a "frame" is what
most other applications call a "window".  Multiple graphical frames
can be shown on the screen at the same time.  On a text terminal, only
one frame can be shown at a time.

>> Type C-x 5 2.
   See a new frame appear on your screen.

You can do everything you did in the original frame in the new frame.
There is nothing special about the first frame.

>> Type C-x 5 0.
   This removes the selected frame.

You can also remove a frame by using the normal method provided by the
graphical system (often clicking a button with an "X" at a top corner
of the frame).  If you remove the Emacs job's last frame this way,
that exits Emacs.


* RECURSIVE EDITING LEVELS
--------------------------

Sometimes you will get into what is called a "recursive editing
level".  This is indicated by square brackets in the mode line,
surrounding the parentheses around the major mode name.  For
example, you might see [(Fundamental)] instead of (Fundamental).

To get out of the recursive editing level, type <ESC> <ESC> <ESC>.
That is an all-purpose "get out" command.  You can also use it for
eliminating extra windows, and getting out of the minibuffer.

>> Type M-x to get into a minibuffer; then type <ESC> <ESC> <ESC> to
   get out.

You cannot use C-g to get out of a recursive editing level.  This is
because C-g is used for canceling commands and arguments WITHIN the
recursive editing level.


* GETTING MORE HELP
-------------------

In this tutorial we have tried to supply just enough information to
get you started using Emacs.  There is so much available in Emacs that
it would be impossible to explain it all here.  However, you may want
to learn more about Emacs since it has many other useful features.
Emacs provides commands for reading documentation about Emacs
commands.  These "help" commands all start with the character
CONTROL-h, which is called "the Help character".

To use the Help features, type the C-h character, and then a
character saying what kind of help you want.  If you are REALLY lost,
type C-h ? and Emacs will tell you what kinds of help it can give.
If you have typed C-h and decide you do not want any help, just
type C-g to cancel it.

(If C-h does not display a message about help at the bottom of the
screen, try typing the F1 key or M-x help <Return> instead.)

The most basic HELP feature is C-h c.  Type C-h, the character c, and
a command character or sequence; then Emacs displays a very brief
description of the command.

>> Type C-h c C-p.

The message should be something like this:

	C-p runs the command previous-line

This tells you the "name of the function".  Since function names
are chosen to indicate what the command does, they can serve as
very brief documentation--sufficient to remind you of commands you
have already learned.

Multi-character commands such as C-x C-s and <ESC>v (instead of M-v,
if you have no META or EDIT or ALT key) are also allowed after C-h c.

To get more information about a command, use C-h k instead of C-h c.

>> Type C-h k C-p.

This displays the documentation of the function, as well as its name,
in an Emacs window.  When you are finished reading the output, type
C-x 1 to get rid of that window.  You do not have to do this right
away.  You can do some editing while referring to the help text, and
then type C-x 1.

Here are some other useful C-h options:

   C-h f	Describe a function.  You type in the name of the
		function.

>> Try typing C-h f previous-line <Return>.
   This displays all the information Emacs has about the
   function which implements the C-p command.

A similar command C-h v displays the documentation of variables,
including those whose values you can set to customize Emacs behavior.
You need to type in the name of the variable when Emacs prompts for it.

   C-h a	Command Apropos.  Type in a keyword and Emacs will list
		all the commands whose names contain that keyword.
		These commands can all be invoked with META-x.
		For some commands, Command Apropos will also list a
		sequence of one or more characters which runs the same
		command.

>> Type C-h a file <Return>.

This displays in another window a list of all M-x commands with "file"
in their names.  You will see character-commands listed beside the
corresponding command names (such as C-x C-f beside find-file).

>> Type C-M-v to scroll the help window.  Do this a few times.

>> Type C-x 1 to delete the help window.

   C-h i	Read included Manuals (a.k.a. Info).  This command puts
		you into a special buffer called "*info*" where you
		can read manuals for the packages installed on your system.
		Type m emacs <Return> to read the Emacs manual.
		If you have never before used Info, type h and Emacs
		will take you on a guided tour of Info mode facilities.
		Once you are through with this tutorial, you should
		consult the Emacs Info manual as your primary documentation.


* MORE FEATURES
---------------

You can learn more about Emacs by reading its manual, either as a
printed book, or inside Emacs (use the Help menu or type C-h r).
Two features that you may like especially are completion, which saves
typing, and dired, which simplifies file handling.

Completion is a way to avoid unnecessary typing.  For instance, if you
want to switch to the *Messages* buffer, you can type C-x b *M<Tab>
and Emacs will fill in the rest of the buffer name as far as it can
determine from what you have already typed.  Completion also works for
command names and file names.  Completion is described in the Emacs
manual in the node called "Completion".

Dired enables you to list files in a directory (and optionally its
subdirectories), move around that list, visit, rename, delete and
otherwise operate on the files.  Dired is described in the Emacs
manual in the node called "Dired".

The manual also describes many other Emacs features.


* CONCLUSION
------------

To exit Emacs use C-x C-c.

This tutorial is meant to be understandable to all new users, so if
you found something unclear, don't sit and blame yourself - complain!


* COPYING
---------

This tutorial descends from a long line of Emacs tutorials
starting with the one written by Stuart Cracraft for the original Emacs.

This version of the tutorial is a part of GNU Emacs.  It is copyrighted
and comes with permission to distribute copies on certain conditions:

  Copyright (C) 1985, 1996, 1998, 2001-2021 Free Software Foundation,
  Inc.

  This file is part of GNU Emacs.

  GNU Emacs is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  GNU Emacs is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with GNU Emacs.  If not, see <https://www.gnu.org/licenses/>.

Please read the file COPYING and then do give copies of GNU Emacs to
your friends.  Help stamp out software obstructionism ("ownership") by
using, writing, and sharing free software!
